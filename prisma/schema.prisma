generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Alpha {
  id    String  @id @default(cuid())
  email String? @unique
  first String
  last  String
}

model FlightPlanMetadata {
  id           String      @id @default(cuid())
  takeOffTime  DateTime
  landingTime  DateTime
  hours        String
  price        String
  FlightPlan   FlightPlan?
}

model FlightPlan {
  id         String             @id @default(cuid())
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  authorId   String
  metadataId String             @unique
  access     Boolean            @default(false)
  avionics   String
  category   String             @default("airplane")
  class      String
  metadata   FlightPlanMetadata @relation(fields: [metadataId], references: [id])
  author     User               @relation(fields: [authorId], references: [id])
}

model PilotCredentials {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  certificate    String[] @default([])
  ratings        String[] @default([])
  userId         String   @unique
  certificateNum String   @unique
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  phone         String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Posts         FlightPlan[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
